version: '3'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
  frontend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}


services:

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - NGINX_HOST_HTTP_EXPOSE=${NGINX_HOST_HTTP_EXPOSE}
        - NGINX_HOST_HTTPS_EXPOSE=${NGINX_HOST_HTTPS_EXPOSE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${CERTBOT_PATH_CERTS}:/var/certs
      - ${CERTBOT_PATH_LETSENCRYPT}:/var/www/letsencrypt
    depends_on:
      - php
    networks:
      - backend

  ### PHP #################################################
  php:
    build:
      context: ./php
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      - backend

  ### PostgreSQL ###########################################
  postgres:
    build: ./postgres
    volumes:
      - ${POSTGRES_BD_PATH_HOST}:${POSTGRES_BD_PATH_CONTAINER}
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
      - frontend

  ### Redis ################################################
  redis:
    image: redis:alpine
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    networks:
      - backend

  ### React Decameron #####################################
  react_decameron:
    build:
      context: ./node
      args:
        - NODE_VERSION=${NODE_VERSION}
    working_dir: ${APP_CODE_PATH_CONTAINER}/FrontReact
    volumes:
      - ${DATA_PATH_HOST}/node:/src/
      - ${CERTBOT_PATH_CERTS}:/var/certs
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - 6443:6443
    environment:
      - NODE_ENV=${NODE_ENV}
    command: 'npm install'
    depends_on:
      - nginx
    networks:
      - backend

  ### Cerbot GoodPay ####################################
  certbot_api_decameron:
    build:
      context: ./certbot
    volumes:
      - ./data/certbot/certs/${CERTBOT_DE_FRONT}/:/var/certs/${CERTBOT_DE_FRONT}
      - ./certbot/letsencrypt/:/var/www/letsencrypt
    environment:
      - CN=${CERTBOT_DE_FRONT}
      - EMAIL=cobytzdev@gmail.com
      - CERT=cert
      - PRIVKEY=privkey
    depends_on:
      - nginx
    networks:
      - frontend

  ### Cerbot GoodPay ####################################
  certbot_back_decameron:
    build:
      context: ./certbot
    volumes:
      - ./data/certbot/certs/${CERTBOT_DE_API}/:/var/certs/${CERTBOT_DE_API}
      - ./certbot/letsencrypt/:/var/www/letsencrypt
    environment:
      - CN=${CERTBOT_DE_API}
      - EMAIL=cobytzdev@gmail.com
      - CERT=cert
      - PRIVKEY=privkey
    depends_on:
      - nginx
    networks:
      - frontend
